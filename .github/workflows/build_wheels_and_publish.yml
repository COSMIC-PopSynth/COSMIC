name: Build wheel and publish

on: 
  release:
    types: [published, push]
  workflow_dispatch:
  

env:
  CIBW_BUILD: "cp39-* cp310-*"
  CIBW_SKIP: "*-win32 *musllinux*"
  CIBW_MANYLINUX_X86_64_IMAGE: manylinux2014
  CIBW_BEFORE_BUILD: pip install numpy --config-settings=setup-args="-Dallow-noblas=true"
  CIBW_BUILD_VERBOSITY: "1"

jobs:
  build-wheels:
    name: Build ${{ matrix.python-version }} wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]

    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - uses: actions/setup-python@v4
      name: Install Python
      with:
        python-version: "3.10"
        
    - name: Setup Mac
      if: runner.os == 'macOS'
      run: |
        python -m pip install numpy h5py versioneer
        
    - name: Setup Linux
      if: runner.os == 'Linux'
      run: |
        python -m pip install numpy h5py versioneer
        
    - name: Build wheels
      run: |
        sudo ln -s /opt/homebrew/bin/gfortran-11 /opt/homebrew/bin/gfortran || true
        python -m pip install meson ninja build
        pip install .
        python -m build --wheel --outdir wheelhouse 
    - uses: actions/upload-artifact@v3
      with:
        path: ./wheelhouse/*.whl

  build-source-dist:
    name: Build source dist
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions/setup-python@v4
        name: Install Python
        with:
          python-version: "3.10" 
          
      - name: Build dist
        run: |
          python -m pip install --upgrade pip
          pip install setuptools wheel twine numpy build meson ninja
          pip install .
          python -m build
      - uses: actions/upload-artifact@v3
        with:
          path: ./dist/*.tar.gz

  publish:
    needs: [build-wheels, build-source-dist]
    name: Publish Python üêç distributions üì¶ to PyPI and TestPyPI
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: ["3.10"]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Download builds
      uses: actions/download-artifact@v3
      with:
          name: artifact
          path: dist

    #- name: Publish distribution üì¶ to PyPI
    #  uses: pypa/gh-action-pypi-publish@release/v1
    #  with:
    #    password: ${{ secrets.pypi_password }}
