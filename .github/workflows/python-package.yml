# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Unit Test COSMIC

on: [pull_request, push]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.7', '3.8', '3.9', '3.10']

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - name: Cache pip
      uses: actions/cache@v2
      with:
        # This path is specific to Ubuntu
        path: ~/.cache/pip
        # Look to see if there is a cache hit for the corresponding requirements file
        key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
          ${{ runner.os }}-
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install gfortran swig libhdf5-serial-dev meson python3-dev
        pip install numpy ninja
        pip install -r requirements.txt

    - name: Print installed packages
      run: |
        python -m pip list
    - name: Print PYTHONPATH
      run: |
        echo "PYTHONPATH: $PYTHONPATH"

    - name: install package
      run: |
        PYTHON_VERSION=${{ matrix.python-version }}
        PYTHON_INCLUDE_PATH=$(python${PYTHON_VERSION} -c "from distutils.sysconfig import get_python_inc; print(get_python_inc())")
        PYTHON_LIB_PATH=$(python${PYTHON_VERSION} -c "import sysconfig; print(sysconfig.get_config_var('LIBDIR'))")
        CFLAGS="-I${PYTHON_INCLUDE_PATH}" \
        LDFLAGS="-L${PYTHON_LIB_PATH}" \
        meson setup build
        sudo meson compile -C build
        sudo meson install -C build
        
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics --exclude docs
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics --exclude docs,versioneer.py,cosmic/_version.py,cosmic/tests,cosmic/*/__init__.py
    
    - name: Debug Meson Introspect Output
      run: |
        meson introspect build --installed

    - name: Test with pytest
      run: |
        bash ci/compile_benchmark.sh
        PYTHONPATH=$(meson introspect builddir --installed | jq -r '.[].destination' | tr '\n' ':')$PYTHONPATH
        pytest --cov=./cosmic --cov-report=xml
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v1
